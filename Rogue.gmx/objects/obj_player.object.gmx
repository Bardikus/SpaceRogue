<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>friction = 0.3;
currentWeapon = 0; //1 = Pistol ;; 2 = Assault ;; 3 = Shotgun ;; 4 = Rocket
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerGainSpeed = 0.4;
playerTopSpeed  = 2;
global.playerMoving = 0;

//-------MOVEMENT----------------
//keyboard check for input
if keyboard_check(ord("A")) {
    hspeed -= playerGainSpeed;
    global.playerMoving = 1;
}
if keyboard_check(ord("D")) {
    hspeed += playerGainSpeed;
    global.playerMoving = 1;
}
if keyboard_check(ord("W")) {
    vspeed -= playerGainSpeed;
    global.playerMoving = 1;
}
if keyboard_check(ord("S")) {
    vspeed += playerGainSpeed;
    global.playerMoving = 1;
}

//Limit player speed
if (speed &gt; playerTopSpeed) {
    speed = playerTopSpeed;
}
//-------------------------------

//---------WEAPONS------------------------------------------------

//-----Shooting Bullets------------------------
if(currentWeapon == 1 &amp;&amp; mouse_check_button(mb_left))
   instance_create(obj_player.x + 11, obj_player.y + 10, obj_pistol_Bullet);
if(currentWeapon == 2 &amp;&amp; mouse_check_button(mb_left))
   instance_create(obj_player.x + 11, obj_player.y + 10, obj_rifle_Bullet);
if(currentWeapon == 3 &amp;&amp; mouse_check_button(mb_left))
   instance_create(obj_player.x + 11, obj_player.y + 10, obj_shotgun_Bullet);
if(currentWeapon == 4 &amp;&amp; mouse_check_button(mb_left))
   instance_create(obj_player.x + 11, obj_player.y + 10, obj_pistol_Bullet);
//---------------------------------------------

//-----Switching weapons-----------------------
if keyboard_check_pressed(ord("1")) // PISTOL
    currentWeapon = 1;
if keyboard_check_pressed(ord("2")) // RIFLE
    currentWeapon = 2;
if keyboard_check_pressed(ord("3")) // SHOTGUN
    currentWeapon = 3;
if keyboard_check_pressed(ord("4")) // RPG
    currentWeapon = 4;
//--------------------------------------------

//------------------------------------------------------------------


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nrOfRooms = 2;

if(obj_player.x &lt; 17) // left
{
    if (roomArray[xMapPlayer - 1, yMapPlayer].roomLayout == "")
    {
        roomIndex = irandom(nrOfRooms - 1) + 1
        roomName = string("rm_" + string(roomArray[xMapPlayer - 1, yMapPlayer].doorLayout) + "_" + string(roomIndex))
        roomArray[xMapPlayer - 1, yMapPlayer].roomLayout = roomName;
    }
    else
        roomName = roomArray[xMapPlayer - 1, yMapPlayer].roomLayout;
    room_goto(asset_get_index(roomName));
    xMapPlayer -= 1;
    obj_player.x = 192;
    obj_player.y = 80;    
}
if(obj_player.x &gt; 200) //right
{
    if (roomArray[xMapPlayer + 1, yMapPlayer].roomLayout == "")
    {
        roomIndex = irandom(nrOfRooms - 1) + 1
        roomName = string("rm_" + string(roomArray[xMapPlayer + 1, yMapPlayer].doorLayout) + "_" + string(roomIndex));
        roomArray[xMapPlayer + 1, yMapPlayer].roomLayout = roomName;
    }
    else
        roomName = roomArray[xMapPlayer + 1, yMapPlayer].roomLayout;
    room_goto(asset_get_index(roomName));
    xMapPlayer += 1;
    obj_player.x = 32;
    obj_player.y = 80;
}
if(obj_player.y &lt; 17) //up
{
    if (roomArray[xMapPlayer, yMapPlayer - 1].roomLayout == "")
    {
        roomIndex = irandom(nrOfRooms - 1) + 1
        roomName = string("rm_" + string(roomArray[xMapPlayer, yMapPlayer - 1].doorLayout) + "_" + string(roomIndex));
        roomArray[xMapPlayer, yMapPlayer - 1].roomLayout = roomName;    
    }
    else
        roomName = roomArray[xMapPlayer, yMapPlayer - 1].roomLayout;
    room_goto(asset_get_index(roomName));
    yMapPlayer -= 1;
    obj_player.x = 112;
    obj_player.y = 118;
}
if(obj_player.y &gt; 140) //down
{
    if (roomArray[xMapPlayer, yMapPlayer + 1].roomLayout == "")
    {
        roomIndex = irandom(nrOfRooms - 1) + 1
        roomName = string("rm_" + string(roomArray[xMapPlayer, yMapPlayer + 1].doorLayout) + "_" + string(roomIndex));
        roomArray[xMapPlayer, yMapPlayer + 1].roomLayout = roomName;    
    }
    else
        roomName = roomArray[xMapPlayer, yMapPlayer + 1].roomLayout;
    room_goto(asset_get_index(roomName));
    yMapPlayer += 1;
    obj_player.x = 112;
    obj_player.y = 32;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>402</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_collision</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>hspeed</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>103</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_hspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>402</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_collision</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>vspeed</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>104</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_vspeed</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -2
draw_self();
depth = -1
draw_sprite_ext( spr_playerShadow, image_index, x + 12, y + 20, image_xscale, image_yscale, image_angle, image_blend, 0.2 );

if( mouse_x &gt; obj_player.x)
    weaponOrientation = -1; 
if( mouse_x &lt;= obj_player.x)
    weaponOrientation = 1; 



if (currentWeapon == 1) // PISTOL
{
     draw_sprite_ext(spr_pistol, 0, x + 9, y + 9, 1.5 * weaponOrientation, 1.5 , point_direction(x + 11, y + 11, mouse_x, mouse_y) + 180 * (weaponOrientation + 1) /2, c_white, 1);
}
if (currentWeapon == 2) // RIFLE
{
     draw_sprite_ext(spr_rifle, 0, x + 12, y + 10, 1 * weaponOrientation, 1 , point_direction(x + 11, y + 11, mouse_x, mouse_y) + 180 * (weaponOrientation + 1) /2, c_white, 1);
}
if (currentWeapon == 3) // SHOTGUN
{
     draw_sprite_ext(spr_shotgun, 0, x + 12, y + 10, 1 * weaponOrientation, 1 , point_direction(x + 11, y + 11, mouse_x, mouse_y) + 180 * (weaponOrientation + 1) /2, c_white, 1);
}
if (currentWeapon == 4) // RPG
{
     draw_sprite_ext(spr_RPG, 0, x + 12, y + 10, 1 * weaponOrientation, 1 , point_direction(x + 11, y + 11, mouse_x, mouse_y) + 180 * (weaponOrientation + 1) /2, c_white, 1);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,4</point>
    <point>4,4</point>
  </PhysicsShapePoints>
</object>
